<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsd.dao.fundstatement.RedLineUpdateRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hsd.entity.fundstatement.RedLineUpdateRecord" >
    <id column="id" property="id" jdbcType="NVARCHAR" />
    <result column="RedLineId" property="redlineid" jdbcType="VARCHAR" />
    <result column="ExpensesReimbursementRedLine" property="expensesreimbursementredline" jdbcType="DECIMAL" />
    <result column="subscribeRedLine" property="subscriberedline" jdbcType="DECIMAL" />
    <result column="predictIncome" property="predictincome" jdbcType="DECIMAL" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="fieldId" property="fieldid" jdbcType="INTEGER" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, RedLineId, ExpensesReimbursementRedLine, subscribeRedLine, predictIncome, userId, 
    fieldId, createDate, remark, flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hsd.entity.fundstatement.RedLineUpdateRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from RedLineUpdateRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from RedLineUpdateRecord
    where id = #{id,jdbcType=NVARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from RedLineUpdateRecord
    where id = #{id,jdbcType=NVARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hsd.entity.fundstatement.RedLineUpdateRecord" >
    insert into RedLineUpdateRecord (id, RedLineId, ExpensesReimbursementRedLine, 
      subscribeRedLine, predictIncome, userId, 
      fieldId, createDate, remark, 
      flag)
    values (#{id,jdbcType=NVARCHAR}, #{redlineid,jdbcType=VARCHAR}, #{expensesreimbursementredline,jdbcType=DECIMAL}, 
      #{subscriberedline,jdbcType=DECIMAL}, #{predictincome,jdbcType=DECIMAL}, #{userid,jdbcType=INTEGER}, 
      #{fieldid,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hsd.entity.fundstatement.RedLineUpdateRecord" >
    insert into RedLineUpdateRecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="redlineid != null" >
        RedLineId,
      </if>
      <if test="expensesreimbursementredline != null" >
        ExpensesReimbursementRedLine,
      </if>
      <if test="subscriberedline != null" >
        subscribeRedLine,
      </if>
      <if test="predictincome != null" >
        predictIncome,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="fieldid != null" >
        fieldId,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NVARCHAR},
      </if>
      <if test="redlineid != null" >
        #{redlineid,jdbcType=VARCHAR},
      </if>
      <if test="expensesreimbursementredline != null" >
        #{expensesreimbursementredline,jdbcType=DECIMAL},
      </if>
      <if test="subscriberedline != null" >
        #{subscriberedline,jdbcType=DECIMAL},
      </if>
      <if test="predictincome != null" >
        #{predictincome,jdbcType=DECIMAL},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="fieldid != null" >
        #{fieldid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hsd.entity.fundstatement.RedLineUpdateRecord" >
    update RedLineUpdateRecord
    <set >
      <if test="redlineid != null" >
        RedLineId = #{redlineid,jdbcType=VARCHAR},
      </if>
      <if test="expensesreimbursementredline != null" >
        ExpensesReimbursementRedLine = #{expensesreimbursementredline,jdbcType=DECIMAL},
      </if>
      <if test="subscriberedline != null" >
        subscribeRedLine = #{subscriberedline,jdbcType=DECIMAL},
      </if>
      <if test="predictincome != null" >
        predictIncome = #{predictincome,jdbcType=DECIMAL},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="fieldid != null" >
        fieldId = #{fieldid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=NVARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hsd.entity.fundstatement.RedLineUpdateRecord" >
    update RedLineUpdateRecord
    set RedLineId = #{redlineid,jdbcType=VARCHAR},
      ExpensesReimbursementRedLine = #{expensesreimbursementredline,jdbcType=DECIMAL},
      subscribeRedLine = #{subscriberedline,jdbcType=DECIMAL},
      predictIncome = #{predictincome,jdbcType=DECIMAL},
      userId = #{userid,jdbcType=INTEGER},
      fieldId = #{fieldid,jdbcType=INTEGER},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=NVARCHAR}
  </update>
</mapper>