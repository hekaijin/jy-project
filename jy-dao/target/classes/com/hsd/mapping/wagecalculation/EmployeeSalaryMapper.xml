<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsd.dao.wagecalculation.EmployeeSalaryMapper" >
  <resultMap id="BaseResultMap" type="com.hsd.entity.wagecalculation.EmployeeSalary" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="fieldId" property="fieldid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="monthTotalSalary" property="monthtotalsalary" jdbcType="DECIMAL" />
    <result column="baseSalary" property="basesalary" jdbcType="DECIMAL" />
    <result column="performanceSalary" property="performancesalary" jdbcType="DECIMAL" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fieldId, userId, monthTotalSalary, baseSalary, performanceSalary, createDate, 
    remark, flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hsd.entity.wagecalculation.EmployeeSalaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from employeeSalary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from employeeSalary
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from employeeSalary
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hsd.entity.wagecalculation.EmployeeSalary" >
    insert into employeeSalary (id, fieldId, userId, 
      monthTotalSalary, baseSalary, performanceSalary, 
      createDate, remark, flag
      )
    values (#{id,jdbcType=VARCHAR}, #{fieldid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{monthtotalsalary,jdbcType=DECIMAL}, #{basesalary,jdbcType=DECIMAL}, #{performancesalary,jdbcType=DECIMAL}, 
      #{createdate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hsd.entity.wagecalculation.EmployeeSalary" >
    insert into employeeSalary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fieldid != null" >
        fieldId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="monthtotalsalary != null" >
        monthTotalSalary,
      </if>
      <if test="basesalary != null" >
        baseSalary,
      </if>
      <if test="performancesalary != null" >
        performanceSalary,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fieldid != null" >
        #{fieldid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="monthtotalsalary != null" >
        #{monthtotalsalary,jdbcType=DECIMAL},
      </if>
      <if test="basesalary != null" >
        #{basesalary,jdbcType=DECIMAL},
      </if>
      <if test="performancesalary != null" >
        #{performancesalary,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hsd.entity.wagecalculation.EmployeeSalary" >
    update employeeSalary
    <set >
      <if test="fieldid != null" >
        fieldId = #{fieldid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="monthtotalsalary != null" >
        monthTotalSalary = #{monthtotalsalary,jdbcType=DECIMAL},
      </if>
      <if test="basesalary != null" >
        baseSalary = #{basesalary,jdbcType=DECIMAL},
      </if>
      <if test="performancesalary != null" >
        performanceSalary = #{performancesalary,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hsd.entity.wagecalculation.EmployeeSalary" >
    update employeeSalary
    set fieldId = #{fieldid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      monthTotalSalary = #{monthtotalsalary,jdbcType=DECIMAL},
      baseSalary = #{basesalary,jdbcType=DECIMAL},
      performanceSalary = #{performancesalary,jdbcType=DECIMAL},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>