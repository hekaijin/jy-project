<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		">
 
	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->
	<context:component-scan base-package="com.hsd.action" />
	<context:component-scan base-package="com.hsd.annotation" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 定时任务调度 -->
	<bean id="schedule"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="paymentDetailTrigger" />
				<ref bean="waterAndRecordTrigger" />
				<ref bean="visitorTrigger" />
			</list>
		</property>
	</bean>


	<bean id="paymentDetailTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="paymentDetailJobDetail" />
		<property name="cronExpression" value="0 0 1 ? * *" />
	</bean>
	<bean id="waterAndRecordTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="waterAndRecordJobDetail" />
		<property name="cronExpression" value="0 0 1 ? * *" />
	</bean>
	<bean id="visitorTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="visitorJobDetail" />
		<property name="cronExpression" value="0 0 1 ? * *" />
	</bean>


	<bean id="paymentDetailJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="paymentDetailTask" />
		<property name="targetMethod" value="insertPaymentDetailOne" />
	</bean>
	<bean id="waterAndRecordJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="waterAndRecordTask" />
		<property name="targetMethod" value="insertWaterAndRecord" />
	</bean>
	<bean id="visitorJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="visitorTask" />
		<property name="targetMethod" value="changeVisitorStatus" />
	</bean>

	<!-- 注明：把定时器作用在类上 -->
	<bean id="paymentDetailTask" class="com.hsd.task.PaymentDetailTask" scope="prototype"></bean>
	<bean id="waterAndRecordTask" class="com.hsd.task.WaterAndRecordTask" scope="prototype"></bean>
	<bean id="visitorTask" class="com.hsd.task.VisitorTask" scope="prototype"></bean>

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- json转换器 -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为31M，31*1024*1024 -->
			<value>32505856</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<!-- 拦截器 -->
<!-- <mvc:interceptors>  
    <mvc:interceptor>  
    <mvc:mapping path="/**"/>  
        <bean class="com.hsd.interceptor.LogInterceptor"></bean>  
    </mvc:interceptor>  
</mvc:interceptors> -->
<!-- <import resource="dubbo-consumer.xml" /> -->
</beans>